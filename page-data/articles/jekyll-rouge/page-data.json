{"componentChunkName":"component---src-templates-article-js","path":"/articles/jekyll-rouge","webpackCompilationHash":"6efe87948671d91bc477","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://sacha.me"}},"markdownRemark":{"html":"<p data-block=\"info\">You can now use Rouge in combination with Jekyll on GitHub pages natively. See <a href=\"#using-rouge-in-jekyll-3-on-github-pages\">the last section</a> of this article for more details.</p>\n<p>Code, no matter what language it is in, can be complicated to read. That's why many blogs use syntax highlighting on their code blocks to help their readers better understand the displayed code.</p>\n<p>Jekyll was created with this in mind so it offers easy integration with tools like <a href=\"http://pygments.org\" title=\"Pygments&#x27; project page\">Pygments</a> to automatically highlight all code blocks in your posts. However, Pygments is written in Python, while Jekyll is written in Ruby. Because of this a <a href=\"https://github.com/tmm1/pygments.rb\" title=\"Pygments.rb on GitHub\">Ruby wrapper</a> for the Python tool is needed, slowing builds down significantly.</p>\n<p>Because of this, developers have come up with alternatives. One of those is called <a href=\"https://github.com/jneen/rouge\" title=\"Rouge on GitHub\">Rouge</a> and in this post I will show you how you can (and why you should) integrate Rouge into your Jekyll setup.</p>\n<h3 id=\"benefits-of-using-rouge\"><a href=\"#benefits-of-using-rouge\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Benefits of using Rouge</h3>\n<p>First of all, it's a lot cleaner to use a Ruby-based syntax highlighter in a Ruby-based setup. You eliminate the need to spawn Python processes right away, which reduces your build time considerably.</p>\n<p>At this point you might think of <a href=\"http://coderay.rubychan.de\" title=\"CodeRay&#x27;s project page\">CodeRay</a>, another Ruby-based syntax highlighter. You could also use that, but Rouge comes with support for all Pygments themes, making it easier to discover new styles for your code blocks. Also, Rouge is just a little bit faster.</p>\n<p>On my admittedly small site, a standard <code class=\"language-text\">jekyll build</code> command took about 28 seconds to complete. Using CodeRay, the build time reduced to 18 seconds, while using Rouge cut the build time by another 2 seconds down to 16 seconds. A total saving of about <strong>40%</strong> is amazing, especially when you want to preview your posts regularly while you're writing them.</p>\n<h3 id=\"installing-rouge\"><a href=\"#installing-rouge\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing Rouge</h3>\n<p>The easiest way to use Rouge is using the <a href=\"http://kramdown.gettalong.org\" title=\"kramdown&#x27;s project page\">kramdown</a> markdown parser. They recently added native support for Rouge and Jekyll has been supporting kramdown for a while now.</p>\n<p>First, make sure you're using a recent version of Jekyll (for example <strong>2.5.0</strong>). You can check your installed version using <code class=\"language-text\">jekyll -v</code>. Next up, you need to install kramdown and Rouge.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gem <span class=\"token function\">install</span> kramdown rouge</code></pre></div>\n<p>If you already have a version of kramdown on your machine, make sure it's at least on version <strong>1.5.0</strong>. If you've followed these steps so far you're now ready to use kramdown and Rouge within your Jekyll setup.</p>\n<p>By the way, if, like me, you're always getting errors doing anything with Rouge, remember <em>it's called Rouge, not Rogue</em>.</p>\n<h3 id=\"using-rouge-with-jekyll\"><a href=\"#using-rouge-with-jekyll\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Rouge with Jekyll</h3>\n<p>As with all options concerning your builds, the place to add them is in your <code class=\"language-text\">_config.yml</code>. You might have an entry like <code class=\"language-text\">highlighter: pygments</code> in there, make sure to remove that. In my site's configuration I'm using the following options:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span> kramdown\n\n<span class=\"token key atrule\">kramdown</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">input</span><span class=\"token punctuation\">:</span> GFM\n  <span class=\"token key atrule\">syntax_highlighter</span><span class=\"token punctuation\">:</span> rouge</code></pre></div>\n<p>This tells Jekyll to use kramdown when parsing markdown files and to pass the two settings to kramdown whenever it's run. <code class=\"language-text\">input: GFM</code> allows me to use the same syntax for markdown files I'd use on GitHub, which is especially useful for code blocks. You can now write code blocks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">`​`` html\n<span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>\"#\"<span class=\"token operator\">></span>Hello world<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n`​``</code></pre></div>\n<p>Note the <code class=\"language-text\">html</code> after the first pair of triple backticks (`). This tells Rouge what language to use for the code block. You can view all supported languages with samples on <a href=\"http://rouge.jayferd.us/demo\" title=\"Rouge language demos\">Rouge's demo site</a>.</p>\n<p>Rouge adds classes to your code blocks, allowing you to style parts of your code from a stylesheet. Rouge has the added benefit of being compatible with stylesheets created for Pygments (of which there are <em><a href=\"https://github.com/search?q=pygments+style\" title=\"Find new Pygments themes\">lots</a></em>).</p>\n<p>The only drawback for now is that kramdown only lets you define the standard language to use for your code blocks, all other options are not yet supported. This also means that line numbers are not yet supported. If you absolutely want that feature, you'll have to wait for a little while.</p>\n<h3 id=\"using-rouge-in-jekyll-3-on-github-pages\"><a href=\"#using-rouge-in-jekyll-3-on-github-pages\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using Rouge in Jekyll 3 on GitHub Pages</h3>\n<p>Ever since GitHub pages have upgraded Jekyll to version 3 you can use Rouge as your default syntax highlighter. Enabling it is as easy as including the following two lines in your <code class=\"language-text\">_config.yml</code>. In fact, GitHub will even send you a warning if you're trying to use anything other than Rouge.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span> kramdown\n<span class=\"token key atrule\">highlighter</span><span class=\"token punctuation\">:</span> rouge</code></pre></div>\n<p>This gives you both the performance benefits from using a Ruby-based syntax highlighter, while also allowing you to include your code blocks using the GitHub Flavored Markdown syntax.</p>","frontmatter":{"date":"15 January 2015","path":"/articles/jekyll-rouge","title":"Syntax Highlighting in Jekyll With Rouge"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}