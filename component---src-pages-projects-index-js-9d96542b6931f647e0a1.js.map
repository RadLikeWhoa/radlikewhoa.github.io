{"version":3,"sources":["webpack:///./src/components/projectTeaser.js","webpack:///./src/components/filterButton.js","webpack:///./src/pages/projects/index.js","webpack:///./src/components/iconWell.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["ProjectTeaser","project","onClickFilter","start","frontmatter","date","split","splice","pop","className","data-grid","data-col","title","path","pattern","background","icon","publicURL","href","end","teaser","data-tags","tags","map","tag","key","onClick","FilterButton","label","type","isActive","Projects","state","filter","overlaid","setFilter","scrollToTop","setState","setTimeout","render","this","projects","props","data","allMarkdownRemark","edges","p","node","indexOf","data-button","data-icon","Object","entries","platform","tool","f","React","Component","pageQuery","IconWell","data-pattern","style","backgroundColor","src","alt","$export","$entries","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","module","exports","isEntries","O","keys","length","i","result","call","push"],"mappings":"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","file":"component---src-pages-projects-index-js-9d96542b6931f647e0a1.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport IconWell from './iconWell'\n\nconst ProjectTeaser = ({ project, onClickFilter }) => {\n  const start = +project.frontmatter.date.split('.').splice(-1).pop()\n\n  return (\n    <article className=\"post-inline project-inline\">\n      <div data-grid>\n        <div data-col=\"M1-3\">\n          <IconWell\n            title={project.frontmatter.title}\n            path={project.frontmatter.path}\n            pattern={project.frontmatter.pattern}\n            background={project.frontmatter.background}\n            icon={project.frontmatter.icon.publicURL} />\n        </div>\n        <div data-col=\"M2-3\">\n          <h3 className=\"project-title\">\n            <a href={project.frontmatter.path}>{project.frontmatter.title}</a>\n          </h3>\n          <div className=\"project-intro\">\n            <p>\n              <span className=\"faded\">\n                {!project.frontmatter.end && 'since '}\n                {start}\n                {project.frontmatter.end && project.frontmatter.end !== start && ` – ${project.frontmatter.end}`}\n                {' '}—{' '}\n              </span>\n              {project.frontmatter.teaser}\n            </p>\n          </div>\n          <ul data-tags>\n            {project.frontmatter.tags.map(tag => (\n              <li\n                className=\"tag\"\n                key={tag}\n                onClick={onClickFilter(tag)}>\n                {tag}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProjectTeaser.propTypes = {\n  project: PropTypes.object.isRequired,\n  onClickFilter: PropTypes.func.isRequired\n}\n\nexport default ProjectTeaser\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FilterButton = ({ label, type, onClickFilter, isActive }) => {\n  return (\n    <button\n      className={`tag filter-${type} ${isActive && 'is-active'}`}\n      onClick={onClickFilter}>\n      <span className=\"label\">{label}</span>\n    </button>\n  )\n}\n\nFilterButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onClickFilter: PropTypes.func.isRequired,\n  isActive: PropTypes.bool.isRequired\n}\n\nexport default FilterButton\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport ProjectTeaser from '../../components/projectTeaser'\nimport FilterButton from '../../components/filterButton'\n\nimport { scrollToTop } from '../../components/footer'\n\nclass Projects extends React.Component {\n  state = {\n    filter: '',\n    overlaid: false\n  }\n\n  setFilter = filter => {\n    scrollToTop()\n\n    this.setState({\n      overlaid: false\n    })\n\n    setTimeout(() => {\n      this.setState({\n        filter: this.state.filter !== filter ? filter : ''\n      })\n    }, 300)\n  }\n\n\trender() {\n    const { filter, overlaid } = this.state\n\t\tconst projects = this.props.data.allMarkdownRemark.edges.filter(p => !filter || p.node.frontmatter.tags.indexOf(filter) !== -1)\n\n    const filters = {\n      platform: [ 'Web', 'Mobile', 'Desktop' ],\n  \t\ttype: [ 'App', 'Site', 'Library', 'Game' ],\n    \ttool: [ 'Swift', 'JavaScript', 'Node.js', 'PHP', 'HTML', 'Sass', 'React', 'Angular', 'Wordpress', 'Neos CMS' ]\n    }\n\n\t\treturn (\n\t\t  <Layout>\n\t\t    <SEO title=\"Projects\" />\n\t\t\t\t<section className=\"content-section wrap\">\n\t\t\t\t\t<button\n            href=\"#\"\n            data-button=\"block\"\n            className=\"filter-toggle\"\n            onClick={() => this.setState({ overlaid: true })}>\n\t\t\t      <span data-icon=\"list\"></span>\n            <span className=\"label\">Show Filters</span>\n\t\t\t    </button>\n\t\t\t    <div className={`filters ${filter && 'is-filtered'} ${overlaid && 'is-overlaid'}`}>\n\t\t\t      <div className=\"filter-list-wrapper\">\n\t\t\t        <ul\n                className=\"filter-list\"\n                data-tags>\n                {Object.entries(filters).map(([ key, values ]) => values.map(f => (\n                  <FilterButton\n                    label={f}\n                    key={f}\n                    type={key}\n                    onClickFilter={() => this.setFilter(f)}\n                    isActive={filter === f} />\n                )))}\n\t\t\t        </ul>\n\t\t\t      </div>\n\t\t\t      <button\n              data-button=\"block center\"\n              className=\"filter-close\"\n              onClick={() => this.setState({ overlaid: false })}>\n              Close\n            </button>\n\t\t\t    </div>\n\t\t\t    <div className=\"filter-shade filter-close\" onClick={() => this.setState({ overlaid: false })}></div>\n\t\t\t\t\t{projects.map(({ node }) => (\n            <ProjectTeaser\n              project={node}\n              key={node.frontmatter.title}\n              onClickFilter={tag => () => this.setFilter(tag)} />\n          ))}\n\t\t\t\t</section>\n\t\t  </Layout>\n\t\t)\n\t}\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\n\t\t\tfilter: { fileAbsolutePath: { regex : \"\\/projects/\" }}\n\t\t) {\n      edges {\n        node {\n          html\n          frontmatter {\n            date(formatString: \"DD.MM.YYYY\")\n            title\n\t\t\t\t\t\tend\n\t\t\t\t\t\tpattern\n\t\t\t\t\t\tbackground\n\t\t\t\t\t\ttags\n\t\t\t\t\t\tpath\n\t\t\t\t\t\tteaser\n            icon {\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Projects\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst IconWell = ({ title, path, pattern, background, icon }) => (\n  <a\n    href={path}\n    className=\"project-link\">\n    <div\n      className=\"icon-well\"\n      data-pattern={pattern}\n      style={{ backgroundColor: background }}>\n      <img\n        src={icon}\n        alt={`${title} icon`} />\n    </div>\n  </a>\n)\n\nIconWell.propTypes = {\n  title: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  background: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired\n}\n\nexport default IconWell\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}